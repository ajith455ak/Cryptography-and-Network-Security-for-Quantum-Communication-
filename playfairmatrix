import string

def generate_playfair_matrix():
    return [
        ['M', 'F', 'H', 'I', 'J'],
        ['U', 'N', 'O', 'P', 'Q'],
        ['Z', 'V', 'W', 'X', 'Y'],
        ['E', 'L', 'A', 'R', 'G'],
        ['D', 'S', 'T', 'B', 'C']
    ]

def find_position(matrix, letter):
    if letter == 'J':
        letter = 'I'
    for i in range(5):
        for j in range(5):
            if matrix[i][j] == letter:
                return i, j

def encrypt_pair(matrix, a, b):
    row1, col1 = find_position(matrix, a)
    row2, col2 = find_position(matrix, b)
    
    if row1 == row2:
        return matrix[row1][(col1 + 1) % 5], matrix[row2][(col2 + 1) % 5]
    elif col1 == col2:
        return matrix[(row1 + 1) % 5][col1], matrix[(row2 + 1) % 5][col2]
    else:
        return matrix[row1][col2], matrix[row2][col1]

def prepare_text(text):
    text = text.upper().replace('J', 'I')
    text = ''.join(filter(str.isalpha, text))
    prepared = []
    i = 0
    while i < len(text):
        a = text[i]
        b = text[i + 1] if i + 1 < len(text) else 'X'
        if a == b:
            prepared.append(a)
            prepared.append('X')
            i += 1
        else:
            prepared.append(a)
            prepared.append(b)
            i += 2
    if len(prepared) % 2 != 0:
        prepared.append('X')
    return prepared

def encrypt_message(text):
    matrix = generate_playfair_matrix()
    prepared = prepare_text(text)
    encrypted = []
    for i in range(0, len(prepared), 2):
        enc1, enc2 = encrypt_pair(matrix, prepared[i], prepared[i + 1])
        encrypted.append(enc1)
        encrypted.append(enc2)
    return ''.join(encrypted)

if __name__ == "__main__":
    message = "Must see you over Cadogan West. Coming at once."
    print("Encrypted Message:", encrypt_message(message))
